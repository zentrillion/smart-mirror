{"version":3,"sources":["../src/weather.container.ts"],"names":[],"mappings":"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","file":"weather.container.js","sourceRoot":"","sourcesContent":["import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  Renderer2\n} from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subscription } from 'rxjs/Subscription';\nimport {\n  CurrentWeather,\n  Forecast,\n  WeatherApiService\n} from './services/api/weather.api.service';\nimport {\n  WeatherLayout,\n  WeatherQueryParams,\n  WeatherSettings\n} from './weather.interfaces';\n\n\nexport // tslint:disable-next-line:component-class-suffix\nclass WeatherContainer implements OnDestroy {\n   background: string;\n   color: string;\n   width = 'auto';\n   height = 'auto';\n\n   forecast: Forecast[] | null;\n   currentWeather: CurrentWeather | null;\n  \n  set settings(value: WeatherSettings) {\n    if (!value) {\n      return;\n    }\n    this._settings = value;\n    this.background = this._settings.backgroundColor || 'white';\n    this.color = this._settings.color || 'black';\n    this.width = this._settings.width;\n    this.height = this._settings.height;\n    if (this.weatherApi.apiConfig.name && this.weatherApi.apiConfig.key) {\n      this.getWeather();\n    }\n    if (this._settings.layout) {\n      this.isWideLayout = this._settings.layout === WeatherLayout.WIDE;\n    }\n  }\n\n  get settings(): WeatherSettings {\n    return this._settings;\n  }\n\n  isWideLayout = false;\n  subscriptionCurrentWeather: Subscription;\n  subscriptionForecast: Subscription;\n  currentWeather$: Observable<CurrentWeather>;\n  forecast$: Observable<Forecast[]>;\n  isMouseOn: boolean;\n\n  private _settings: WeatherSettings;\n\n  constructor(\n    private weatherApi: WeatherApiService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private renderer: Renderer2,\n    private element: ElementRef\n  ) {}\n\n  ngOnDestroy() {\n    if (this.subscriptionCurrentWeather) {\n      this.subscriptionCurrentWeather.unsubscribe();\n    }\n    if (this.subscriptionForecast) {\n      this.subscriptionForecast.unsubscribe();\n    }\n  }\n\n  \n  private onMouseEnter() {\n    this.renderer.addClass(this.element.nativeElement, 'active');\n    this.isMouseOn = true;\n  }\n  \n  private onMouseLeave() {\n    this.renderer.removeClass(this.element.nativeElement, 'active');\n    this.isMouseOn = false;\n  }\n\n  getWeather(): void {\n    if (this.subscriptionCurrentWeather) {\n      this.subscriptionCurrentWeather.unsubscribe();\n    }\n    if (this.subscriptionForecast) {\n      this.subscriptionForecast.unsubscribe();\n    }\n    this.currentWeather$ = this.currentWeatherCall();\n    this.forecast$ = this.forecastCall();\n    this.subscriptionCurrentWeather = this.currentWeather$.subscribe(data => {\n      this.currentWeather = data;\n      this.changeDetectorRef.markForCheck();\n    });\n    this.subscriptionForecast = this.forecast$.subscribe(data => {\n      this.forecast = data;\n      this.changeDetectorRef.markForCheck();\n    });\n  }\n\n  currentWeatherCall(): Observable<CurrentWeather> {\n    const params: WeatherQueryParams = Object.assign(\n      {},\n      this.settings.location,\n      { units: this.settings.scale },\n      { lang: this.settings.language }\n    );\n    return this.weatherApi.currentWeather(params);\n  }\n\n  forecastCall(): Observable<Forecast[]> {\n    const params: WeatherQueryParams = Object.assign(\n      {},\n      this.settings.location,\n      { units: this.settings.scale },\n      { lang: this.settings.language }\n    );\n    return this.weatherApi.forecast(params);\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'weather-widget',\n  changeDetection: ChangeDetectionStrategy.Default,\n  styles: [\n    `\n             :host {\n               display: flex;\n               position: relative;\n               padding: 1em;\n               box-sizing: border-box;\n             }\n             .info {\n               display: flex;\n               flex-direction: column;\n               align-items: center;\n               justify-content: center;\n               width: 100%;\n             }\n             .info.wide {\n               flex-direction: row;\n             }\n             .wide .current {\n               flex-grow: 0;\n             }\n             .wide .forecast {\n               flex-grow: 1;\n               overflow-y: auto;\n               height: 100%;\n             }\n             .current {\n               display: flex;\n               flex-direction: column;\n               align-items: center;\n               justify-content: center;\n               min-width: 140px;\n             }\n             .forecast {\n               min-width: 200px;\n               width: 100%;\n               overflow-y: auto;\n             }\n             .current, .forecast {\n               padding: 0.5em;\n             }\n             weather-actions {\n               display: block;\n               position: absolute;\n               top: 10px;\n               right: 10px;\n             }\n             weather-current-temperature.big {\n               font-size: 3em;\n             }\n             weather-icon.big {\n               font-size: 6em;\n               padding: 0.15em;\n             }\n             .empty {\n               flex-direction: row;\n             }\n             .empty i {\n               font-size: 3em;\n               margin-right: 0.3em;\n             }\n\n           `\n  ],\n  template: `\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/weather-icons/2.0.10/css/weather-icons.min.css\">\n    <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/weather-icons/2.0.10/css/weather-icons-wind.min.css\">\n    <div *ngIf=\"currentWeather\" class=\"info\" [class.wide]=\"isWideLayout\">\n      <div class=\"current\">\n        <weather-icon\n          class=\"big\"\n          [iconImageUrl]=\"currentWeather?.iconUrl\"\n          [iconClass]=\"currentWeather?.iconClass\"></weather-icon>\n        <weather-current-description\n          [descripion]=\"currentWeather?.description\"></weather-current-description>\n        <weather-current-wind\n          *ngIf=\"settings.showWind\"\n          [scale]=\"settings.scale\"\n          [deg]=\"currentWeather?.wind.deg\"\n          [speed]=\"currentWeather?.wind.speed\"></weather-current-wind>\n        <weather-location [place]=\"currentWeather?.location\"></weather-location>\n        <weather-current-temperature\n          class=\"big\"\n          [temp]=\"currentWeather?.temp\"\n          [deg]=\"settings.scale\"></weather-current-temperature>\n        <weather-current-details\n          *ngIf=\"settings.showDetails\"\n          [maxTemp]=\"currentWeather?.maxTemp\"\n          [minTemp]=\"currentWeather?.minTemp\"\n          [pressure]=\"currentWeather?.pressure\"\n          [humidity]=\"currentWeather?.humidity\"></weather-current-details>\n      </div>\n      <div class=\"forecast\" *ngIf=\"settings.showForecast\">\n        <weather-forecast\n          [forecast]=\"forecast\"\n          [settings]=\"settings\"\n          [mode]=\"settings.forecastMode\"></weather-forecast>\n      </div>\n    </div>\n    <div *ngIf=\"!currentWeather\" class=\"info empty\">\n      <i class=\"wi wi-sunrise\"></i>\n      No weather data...\n    </div>\n    <weather-actions *ngIf=\"isMouseOn\" (update)=\"getWeather()\"></weather-actions>\n\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: WeatherApiService, },\n{type: ChangeDetectorRef, },\n{type: Renderer2, },\n{type: ElementRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'background': [{ type: HostBinding, args: ['style.background', ] },],\n'color': [{ type: HostBinding, args: ['style.color', ] },],\n'width': [{ type: HostBinding, args: ['style.width', ] },],\n'height': [{ type: HostBinding, args: ['style.height', ] },],\n'forecast': [{ type: Input },],\n'currentWeather': [{ type: Input },],\n'settings': [{ type: Input },],\n'onMouseEnter': [{ type: HostListener, args: ['mouseenter', ] },],\n'onMouseLeave': [{ type: HostListener, args: ['mouseleave', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}