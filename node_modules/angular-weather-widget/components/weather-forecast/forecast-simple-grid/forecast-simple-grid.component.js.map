{"version":3,"sources":["../../../../src/components/weather-forecast/forecast-simple-grid/forecast-simple-grid.component.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EACT,uBAAuB,EACvB,KAAK,EAGN,MAAM,eAAA,CAAgB;AAEvB,OAAO,EAAE,qBAAA,EAAsB,MAAO,2CAAA,CAA4C;AAGlF;IAgBE,4CAAoB,cAAqC;QAArC,mBAAc,GAAd,cAAc,CAAuB;IAAG,CAAC;IAb7D,sBAAI,wDAAQ;aASZ;YACE,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACxB,CAAC;aAXD,UAAa,KAAiB;YAC5B,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACX,MAAM,CAAC;YACT,CAAC;YACD,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC,qBAAqB,CAC7D,IAAI,CAAC,SAAS,CACf,CAAC;QACJ,CAAC;;;OAAA;IAMI,6CAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,8BAA8B;oBACxC,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,MAAM,EAAE;wBACN,4OASQ;qBACT;oBACD,QAAQ,EAAE,gLAIT;iBACF,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,iDAAc,GAAmE,cAAM,OAAA;QAC9F,EAAC,IAAI,EAAE,qBAAqB,GAAG;KAC9B,EAF6F,CAE7F,CAAC;IACK,iDAAc,GAA2C;QAChE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;KAC7B,CAAC;IACF,yCAAC;CA/CD,AA+CC,IAAA;SA/CY,kCAAkC","file":"forecast-simple-grid.component.js","sourceRoot":"","sourcesContent":["import {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { Forecast } from '../../../services/api/weather.api.service';\nimport { WeatherHelpersService } from '../../../services/weather-helpers.service';\n\n\nexport class WeatherForecastSimpleGridComponent {\n  forecastPerDay: Forecast[];\n  \n  set forecast(value: Forecast[]) {\n    if (!value) {\n      return;\n    }\n    this._forecast = value;\n    this.forecastPerDay = this.weatherHelpers.reduceToAveragePerDay(\n      this._forecast\n    );\n  }\n  get forecast(): Forecast[] {\n    return this._forecast;\n  }\n  private _forecast: Forecast[];\n  constructor(private weatherHelpers: WeatherHelpersService) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'weather-forecast-simple-grid',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styles: [\n    `\n           :host {\n             display: flex;\n             width: 100%;\n             justify-content: space-between;\n           }\n           weather-forecast-grid-day {\n             margin: 0 0.4em;\n           }\n           `\n  ],\n  template: `\n    <ng-container *ngFor=\"let forecast of forecastPerDay\">\n      <weather-forecast-grid-day [forecast]=\"forecast\"></weather-forecast-grid-day>\n    </ng-container>\n  `\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: WeatherHelpersService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'forecast': [{ type: Input },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}