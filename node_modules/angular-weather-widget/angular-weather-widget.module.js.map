{"version":3,"sources":["../src/angular-weather-widget.module.ts"],"names":[],"mappings":"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","file":"angular-weather-widget.module.js","sourceRoot":"","sourcesContent":["import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { Http, HttpModule } from '@angular/http';\nimport {\n  WeatherApiConfig,\n  WeatherApiName,\n  WeatherApiService\n} from './services/api/weather.api.service';\nimport { PoolingService } from './services/poling.service';\nimport { WeatherContainer } from './weather.container';\nimport { CommonModule } from '@angular/common';\nimport { WeatherIconComponent } from './components/weather-icon/weather-icon.component';\nimport { WeatherCurrentDescriptionComponent } from './components/weather-current-description/weather-current-description.component';\nimport { WeatherCurrentTempComponent } from './components/weather-current-temperature/current-temperature.component';\nimport { WeatherActionsComponent } from './components/weather-actions/actions.component';\nimport { WeatherLocationComponent } from './components/weather-location/weather-location.component';\nimport { WeatherCurrentWindComponent } from './components/weather-current-wind/weather-current-wind.component';\nimport { OpenWeatherMapApiService } from './services/api/open-weather-map/open-weather-map.api.service';\nimport { WeatherCurrentDetailsComponent } from './components/weather-current-details/weather-current-details.component';\nimport { WeatherForecastComponent } from './components/weather-forecast/weather-forecast.component';\n\nimport { WeatherForecastSimpleGridComponent } from './components/weather-forecast/forecast-simple-grid/forecast-simple-grid.component';\nimport { WeatherForecastGridDayComponent } from './components/weather-forecast/forecast-simple-grid/weather-forecast-grid-day.component';\nimport { WeatherForecastDetailedComponent } from './components/weather-forecast/forecast-detailed/forecast-detailed.component';\nimport { WeatherForecastDetailDayComponent } from './components/weather-forecast/forecast-detailed/forecast-detailed-day.component';\nimport { ChartComponent } from './components/chart/chart.component';\nimport { WeatherForecastChartWideComponent } from './components/weather-forecast/forecast-simple-grid/forecast-chart-wide.component';\nimport { WeatherHelpersService } from './services/weather-helpers.service';\n\nexport function apiServiceFactory(\n  http: Http,\n  pooling: PoolingService,\n  openWeather: WeatherApiConfig\n) {\n  switch (openWeather.name) {\n    case WeatherApiName.OPEN_WEATHER_MAP:\n      return new OpenWeatherMapApiService(http, pooling, openWeather);\n    default:\n      return new OpenWeatherMapApiService(http, pooling, openWeather);\n  }\n}\n\nexport function forRoot(config: WeatherApiConfig): ModuleWithProviders {\n  return {\n    ngModule: AngularWeatherWidgetModule,\n    providers: [\n      PoolingService,\n      WeatherHelpersService,\n      {\n        provide: WeatherApiService,\n        useFactory: apiServiceFactory,\n        deps: [Http, PoolingService, 'WEATHER_CONFIG']\n      },\n      { provide: 'WEATHER_CONFIG', useValue: config }\n    ]\n  };\n}\n\n\nexport class AngularWeatherWidgetModule {\n  constructor() {}\n  static forRoot = forRoot;\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule, HttpModule],\n  declarations: [\n    ChartComponent,\n    WeatherContainer,\n    WeatherCurrentTempComponent,\n    WeatherActionsComponent,\n    WeatherIconComponent,\n    WeatherCurrentDescriptionComponent,\n    WeatherLocationComponent,\n    WeatherCurrentWindComponent,\n    WeatherCurrentDetailsComponent,\n    WeatherForecastComponent,\n    WeatherForecastGridDayComponent,\n    WeatherForecastSimpleGridComponent,\n    WeatherForecastDetailedComponent,\n    WeatherForecastDetailDayComponent,\n    WeatherForecastChartWideComponent\n  ],\n  exports: [WeatherContainer]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\nexport * from './weather.interfaces';\nexport { WeatherApiName } from './services/api/weather.api.service';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}