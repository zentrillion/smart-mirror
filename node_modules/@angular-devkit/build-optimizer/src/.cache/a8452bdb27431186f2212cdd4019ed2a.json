{"remainingRequest":"C:\\Users\\Franz Eder\\Documents\\GitHub\\smart-mirror\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Franz Eder\\Documents\\GitHub\\smart-mirror\\node_modules\\angular-weather-widget\\components\\chart\\chart.component.js","dependencies":[{"path":"C:\\Users\\Franz Eder\\Documents\\GitHub\\smart-mirror\\node_modules\\angular-weather-widget\\components\\chart\\chart.component.js","mtime":1500906519000},{"path":"C:\\Users\\Franz Eder\\Documents\\GitHub\\smart-mirror\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1528636607653},{"path":"C:\\Users\\Franz Eder\\Documents\\GitHub\\smart-mirror\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["import { Component, Input, ElementRef } from '@angular/core';\nimport { Chart } from 'chart.js';\nvar ChartComponent = /*@__PURE__*/ (function () {\n    function ChartComponent(elementRef) {\n        this.elementRef = elementRef;\n    }\n    ChartComponent.prototype.ngOnInit = function () {\n        this.chart = new Chart(this.elementRef.nativeElement.querySelector('canvas'), {\n            type: this.type,\n            data: this.data,\n            options: this.options\n        });\n    };\n    ChartComponent.prototype.ngOnChanges = function (changes) {\n        var _this = this;\n        if (this.chart && changes['data']) {\n            var currentValue_1 = changes['data'].currentValue;\n            ['datasets', 'labels', 'xLabels', 'yLabels'].forEach(function (property) {\n                _this.chart.data[property] = currentValue_1[property];\n            });\n            this.chart.update();\n        }\n    };\n    return ChartComponent;\n}());\nexport { ChartComponent };\n//# sourceMappingURL=chart.component.js.map\n",null]}