{"remainingRequest":"C:\\Users\\Franz Eder\\Documents\\GitHub\\smart-mirror\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Franz Eder\\Documents\\GitHub\\smart-mirror\\node_modules\\angular-weather-widget\\components\\weather-current-wind\\weather-current-wind.component.js","dependencies":[{"path":"C:\\Users\\Franz Eder\\Documents\\GitHub\\smart-mirror\\node_modules\\angular-weather-widget\\components\\weather-current-wind\\weather-current-wind.component.js","mtime":1500906519000},{"path":"C:\\Users\\Franz Eder\\Documents\\GitHub\\smart-mirror\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1528636607653},{"path":"C:\\Users\\Franz Eder\\Documents\\GitHub\\smart-mirror\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { TemperatureScale } from '../weather-current-temperature/current-temperature.component';\nvar WeatherCurrentWindComponent = /*@__PURE__*/ (function () {\n    function WeatherCurrentWindComponent() {\n    }\n    Object.defineProperty(WeatherCurrentWindComponent.prototype, \"scale\", {\n        get: function () {\n            return this._scale;\n        },\n        set: function (value) {\n            this._scale = value;\n            this.unit = this.mapScaleToText(this._scale);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(WeatherCurrentWindComponent.prototype, \"deg\", {\n        get: function () {\n            return this._deg;\n        },\n        set: function (value) {\n            if (!value) {\n                return;\n            }\n            this._deg = value;\n            this.windIcon = \"wi wi-wind from-\" + this._deg + \"-deg\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WeatherCurrentWindComponent.prototype.mapScaleToText = function (scale) {\n        switch (scale) {\n            case TemperatureScale.CELCIUS:\n            case TemperatureScale.KELVIN:\n                return 'm/s';\n            case TemperatureScale.FAHRENHEIT:\n                return 'mil/h';\n            default:\n                return '';\n        }\n    };\n    return WeatherCurrentWindComponent;\n}());\nexport { WeatherCurrentWindComponent };\n//# sourceMappingURL=weather-current-wind.component.js.map\n",null]}